"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var ResponsiveComponent = (function (_React$Component) {
    _inherits(ResponsiveComponent, _React$Component);

    function ResponsiveComponent(props) {
        _classCallCheck(this, ResponsiveComponent);

        _get(Object.getPrototypeOf(ResponsiveComponent.prototype), "constructor", this).call(this, props);
        this.state = { canRender: false };
        this._mediaQueryList = null;
        this._updateState = this._updateState.bind(this);
    }

    _createClass(ResponsiveComponent, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this._tryToRender();
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            this._dispose();
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            this._tryToRender(nextProps);
        }
    }, {
        key: "_tryToRender",
        value: function _tryToRender() {
            var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];

            if (!props.query) {
                throw new Error("ResponsiveComponent: `query` is a required prop!");
            }

            this._dispose();
            this._mediaQueryList = global.matchMedia(props.query);
            this._mediaQueryList.addListener(this._updateState);
            this._updateState();
        }
    }, {
        key: "_dispose",
        value: function _dispose() {
            if (this._mediaQueryList) {
                this._mediaQueryList.removeListener(this._updateState);
                this._mediaQueryList = null;
            }
        }
    }, {
        key: "_updateState",
        value: function _updateState() {
            if (this._mediaQueryList.matches !== this.state.canRender) {
                this.setState({ canRender: this._mediaQueryList.matches });
            }
        }
    }, {
        key: "render",
        value: function render() {
            return this.state.canRender ? this._display : null;
        }
    }, {
        key: "_display",
        get: function get() {
            return _react2["default"].createElement(this.props.tag, { className: "responsive-component" }, this.props.children);
        }
    }]);

    return ResponsiveComponent;
})(_react2["default"].Component);

exports["default"] = ResponsiveComponent;

ResponsiveComponent.propTypes = {
    query: _propTypes2["default"].string.isRequired,
    tag: _propTypes2["default"].string
};

ResponsiveComponent.defaultProps = {
    tag: "div"
};
module.exports = exports["default"];